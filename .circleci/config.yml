version: 2

defaults: &defaults
  working_directory: ~/repo
  docker:
    - image: circleci/node:latest

jobs:
  ###
  # CHECKOUT_CODE
  #
  # - Grab code from GitHub
  # - Restore dependencies from cache
  # - NPM Install
  ###
  checkout_code:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: ~/repo
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            - v1-dependencies-
      - run: npm install
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
      - persist_to_workspace:
          root: ~/repo
          paths: .

  ###
  # TEST_AND_REPORT
  #
  # - Run our unit tests
  # - Report results to codecov
  ###
  test_and_report:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/repo
      - run: npm install
      - run:
          name: Install codecov
          command: npm install --save-dev codecov
      - run:
          name: Jest Tests && Codecov Report
          command: npm run test:ci
      - store_artifacts:
          path: ./coverage/
          prefix: tests
      - store_artifacts:
          path: coverage
          prefix: coverage
      - store_test_results:
          path: ./coverage/

  ###
  # BUILD
  #
  # - Does our solution build?
  ###
  build:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/repo
      - run: npm install
      - run:
          name: Build our app
          command: npm run build
      - persist_to_workspace:
          root: ~/repo
          paths: .

  ##################
  #
  ##################
  publish_npm:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/repo
      - run: npm install
      - run:
          name: Publish using Semantic Release
          command: npx semantic-release

  ###
  # NPM PUBLISH: Hotfix/Feature branches
  ###
  publish_hotfix_or_feature_npm:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/repo
      - run: npm install
      - run:
          name: Write NPM Token to ~/.npmrc
          command: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > ~/repo/.npmrc
      - run:
          name: Bump version number
          command: sh ~/repo/.circleci/version.sh
      - run:
          name: 'What branch am I on?'
          command: echo ${CIRCLE_BRANCH}
      # Sets $PACKAGE_TAG and $TAGGED_PUBLISH env vars
      - run:
          name: Publish our package as a tagged package
          command: bash ~/repo/.circleci/publishTaggedPackage.sh
      - run:
          name: 'What is my package tag?'
          command: echo "${PACKAGE_TAG}"

workflows:
  version: 2

  ###
  # MERGE: MASTER
  ###
  test_build_publish:
    jobs:
      - checkout_code:
          filters:
            branches:
              only: master
      - test_and_report:
          requires:
            - checkout_code
      - build:
          requires:
            - checkout_code
      - publish_npm:
          requires:
            - checkout_code
            - test_and_report
            - build

  ###
  # MERGE: VERSION BRANCHES
  ###
  #   test_build_deploy:
  #     jobs:
  #       - checkout_code:
  #           filters:
  #             branches:
  #               only: vNext
  #       - test_and_report:
  #           requires:
  #             - checkout_code
  #       - build:
  #           requires:
  #             - checkout_code
  #       - deployment:
  #           requires:
  #             - checkout_code
  #             - test_and_report
  #             - build

  ###
  # MERGE: FEATURE/HOTFIX BRANCHES
  ###
  publish_feature_and_hotfix_branches:
    jobs:
      - checkout_code:
          filters:
            branches:
              only:
                - /feature\/.*/
                - /hotfix\/.*/
      - test_and_report:
          requires:
            - checkout_code
      - build:
          requires:
            - checkout_code
      - publish_hotfix_or_feature_npm:
          requires:
            - checkout_code
            - test_and_report
            - build

  ###
  # PULL REQUESTS
  ###
  test_build:
    jobs:
      - checkout_code:
          filters:
            branches:
              ignore:
                - /feature\/.*/
                - /hotfix\/.*/
                - master
      - test_and_report:
          requires:
            - checkout_code
      - build:
          requires:
            - checkout_code
